name: Deploy to VPS

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Deploy to VPS
    - name: Setup VPS
      env:
        PAT: ${{ secrets.PAT }}
        VPS_USER: ${{ secrets.VPS_USER }}
        VPS_HOST: ${{ secrets.VPS_HOST }}
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        echo "$SSH_PRIVATE_KEY" > ssh_key
        chmod 600 ssh_key
        ssh -i ssh_key -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST << EOF
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash
        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
        [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion" # This loads nvm bash_completion
        nvm install node
        npm install -g npm
        EOF

    # Step 3: Deploy to VPS
    - name: Deploy to VPS
      env:
        PAT: ${{ secrets.PAT }}
        VPS_USER: ${{ secrets.VPS_USER }}
        VPS_HOST: ${{ secrets.VPS_HOST }}
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        echo "$SSH_PRIVATE_KEY" > ssh_key
        chmod 600 ssh_key
        ssh -i ssh_key -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST << EOF
        PROJECT_DIR="/repo"
        if [ ! -d "$PROJECT_DIR" ]; then
          echo "Directory $PROJECT_DIR does not exist. Cloning repository..."
          git clone https://$PAT@github.com/HagerPrograms/ms-blurty.git $PROJECT_DIR
          cd $PROJECT_DIR
        else
          echo "Directory $PROJECT_DIR exists. Pulling latest changes..."
          cd $PROJECT_DIR
        git pull origin main
        cd $PROJECT_DIR
        nvm install
        killall node
        npm install --production
        EOF
        
